buildscript {
    ext {
        springAutoRestDocsVersion = "2.0.9"
        springRestDocsVersion = "2.0.4.RELEASE"
        springBootVersion = "2.3.0.RELEASE"
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2"
    }
}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.asciidoctor.convert"

group = "capital.scalable"
version = "2.0.9"

description = """Spring Auto REST Docs Java Web MVC Example Project"""

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

configurations {
    jsondoclet
}

ext {
    // Usually, this would be "$buildDir/generated-snippets", but because this folder
    // also contains a pom.xml Spring REST Docs' ManualRestDocumentation defaults
    // to the Maven build folder
    snippetsDir = file("target/generated-snippets")
    javadocJsonDir = file("$buildDir/generated-javadoc-json")
}

repositories {
     mavenLocal()
     mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.security.oauth:spring-security-oauth2:2.3.5.RELEASE"
    implementation "org.springframework.data:spring-data-commons"
    implementation "org.springframework.boot:spring-boot-starter-hateoas"
    implementation "capital.scalable:spring-auto-restdocs-core:$springAutoRestDocsVersion"
    implementation "capital.scalable:spring-auto-restdocs-shared-pojos-example:${project.version}"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude(module: "commons-logging")
    }
    testImplementation "com.jayway.jsonpath:json-path-assert"
    testImplementation "org.springframework.restdocs:spring-restdocs-core:$springRestDocsVersion"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:$springRestDocsVersion"
    // Java 11 fix for https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j
    testImplementation "javax.xml.bind:jaxb-api:2.3.0"
    testImplementation "com.sun.xml.bind:jaxb-core:2.3.0.1"
    testImplementation "com.sun.xml.bind:jaxb-impl:2.3.0.1"
    testImplementation "javax.activation:activation:1.1.1"
    if (JavaVersion.current() == JavaVersion.VERSION_1_8) {
        jsondoclet "capital.scalable:spring-auto-restdocs-json-doclet:$springAutoRestDocsVersion"
    } else {
        jsondoclet "capital.scalable:spring-auto-restdocs-json-doclet-jdk9:$springAutoRestDocsVersion"
    }
}

task jsonDoclet(type: Javadoc, dependsOn: compileJava) {
    source = sourceSets.main.allJava
    classpath = sourceSets.main.compileClasspath
    destinationDir = javadocJsonDir
    options.docletpath = configurations.jsondoclet.files.asType(List)
    options.doclet = "capital.scalable.restdocs.jsondoclet.ExtractDocumentationAsJsonDoclet"
    options.memberLevel = JavadocMemberLevel.PACKAGE
}

test {
    systemProperty "org.springframework.restdocs.outputDir", snippetsDir
    systemProperty "org.springframework.restdocs.javadocJsonDir", javadocJsonDir

    dependsOn jsonDoclet
}

asciidoctor {
    sourceDir = file("src/main/asciidoc")
    outputDir = file("$buildDir/generated-docs")
    options backend: "html", doctype: "book"
    attributes "source-highlighter": "highlightjs", "snippets": snippetsDir

    dependsOn test
}

asciidoctor.doLast {
    copy {
        from file("$buildDir/generated-docs/html5")
        into file("$sourceSets.main.output.classesDirs/public")
        include "index.html"
    }
}

jar {
    dependsOn asciidoctor
}
