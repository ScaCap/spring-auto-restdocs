buildscript {
    ext {
        kotlinVersion = "1.3.0"
        springAutoRestDocsVersion = "2.0.3-SNAPSHOT"
        springRestDocsVersion = "2.0.2.RELEASE"
        springBootVersion = "2.0.6.RELEASE"
        dokkaVersion = "0.9.17"
    }
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.5.3"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
    }
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.asciidoctor.convert"
apply plugin: "org.jetbrains.dokka"

group = "capital.scalable"
version = "0.0.1-SNAPSHOT"

description = """Spring Auto REST Docs Kotlin Web MVC Example Project"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

ext {
    // Usually, this would be "$buildDir/generated-snippets", but because this folder
    // also contains a pom.xml Spring REST Docs' ManualRestDocumentation defaults
    // to the Maven build folder
    snippetsDir = file("target/generated-snippets")
    javadocJsonDir = file("$buildDir/generated-javadoc-json")
}

repositories {
     mavenLocal()
     mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.security.oauth:spring-security-oauth2:2.3.0.RELEASE"
    compile "org.springframework.data:spring-data-commons"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin"
    compile "capital.scalable:spring-auto-restdocs-core:$springAutoRestDocsVersion"
    compile "capital.scalable:spring-auto-restdocs-shared-pojos-example:${project.version}"
    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude(module: "commons-logging")
    }
    testCompile "com.jayway.jsonpath:json-path-assert"
    testCompile "org.springframework.restdocs:spring-restdocs-core:$springRestDocsVersion"
    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc:$springRestDocsVersion"
}

test {
    systemProperty "org.springframework.restdocs.outputDir", snippetsDir
    systemProperty "org.springframework.restdocs.javadocJsonDir", javadocJsonDir

    dependsOn dokka
}

asciidoctor {
    sourceDir = file("src/main/asciidoc")
    outputDir = file("$buildDir/generated-docs")
    options backend: "html", doctype: "book"
    attributes "source-highlighter": "highlightjs", "snippets": snippetsDir

    dependsOn test
}

asciidoctor.doLast {
    copy {
        from file("$buildDir/generated-docs/html5")
        into file("$sourceSets.main.output.classesDir/public")
        include "index.html"
    }
}

jar {
    dependsOn asciidoctor
}

dokka {
    outputFormat = "auto-restdocs-json"
    outputDirectory = javadocJsonDir
    includeNonPublic = true
    dokkaFatJar = "capital.scalable:spring-auto-restdocs-dokka-json:$springAutoRestDocsVersion"
}
