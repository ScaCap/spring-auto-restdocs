buildscript {
    ext {
        kotlinVersion = "1.4.0"
        springAutoRestDocsVersion = "2.0.10-SNAPSHOT"
        springRestDocsVersion = "2.0.4.RELEASE"
        springBootVersion = "2.3.3.RELEASE"
        dokkaPluginVersion = "0.10.1"
    }
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaPluginVersion"
    }
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.asciidoctor.convert"
apply plugin: "org.jetbrains.dokka"

group = "capital.scalable"
version = "2.0.10-SNAPSHOT"

description = """Spring Auto REST Docs Kotlin Web MVC Example Project"""

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

ext {
    // Usually, this would be "$buildDir/generated-snippets", but because this folder
    // also contains a pom.xml Spring REST Docs' ManualRestDocumentation defaults
    // to the Maven build folder
    snippetsDir = file("target/generated-snippets")
    javadocJsonDir = file("$buildDir/generated-javadoc-json")
}

repositories {
     mavenLocal()
     mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.security.oauth:spring-security-oauth2:2.3.6.RELEASE"
    implementation "org.springframework.data:spring-data-commons"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "capital.scalable:spring-auto-restdocs-core:$springAutoRestDocsVersion"
    implementation "capital.scalable:spring-auto-restdocs-shared-pojos-example:${project.version}"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude(module: "commons-logging")
    }
    testImplementation "com.jayway.jsonpath:json-path-assert"
    testImplementation "org.springframework.restdocs:spring-restdocs-core:$springRestDocsVersion"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:$springRestDocsVersion"
    dokkaRuntime "capital.scalable:spring-auto-restdocs-dokka-json:$springAutoRestDocsVersion"
}

test {
    systemProperty "org.springframework.restdocs.outputDir", snippetsDir
    systemProperty "org.springframework.restdocs.javadocJsonDir", javadocJsonDir

    dependsOn dokka
}

asciidoctor {
    sourceDir = file("src/main/asciidoc")
    outputDir = file("$buildDir/generated-docs")
    options backend: "html", doctype: "book"
    attributes "source-highlighter": "highlightjs", "snippets": snippetsDir

    dependsOn test
}

asciidoctor.doLast {
    copy {
        from file("$buildDir/generated-docs/html5")
        into file("$sourceSets.main.output.classesDirs/public")
        include "index.html"
    }
}

jar {
    dependsOn asciidoctor
}

dokka {
    outputFormat = "auto-restdocs-json"
    outputDirectory = javadocJsonDir
    configuration {
        includeNonPublic = true
        reportUndocumented = false
    }
}
